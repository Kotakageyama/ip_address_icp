type IpInfo = record {
    city : text;
    country : text;
    ip : text;
    isp : text;
    latitude : text;
    longitude : text;
    region : text;
    timestamp : int;
    timezone : text
};

type PagedVisitsResult = record {
    visits : vec IpInfo;
    totalPages : nat;
    currentPage : nat;
    totalItems : nat
};

type CountryStats = record {
    country : text;
    visitCount : nat
};

type MemoryStats = record {
    totalVisits : nat;
    bufferCapacity : nat;
    uniqueCountries : nat
};

service : {
    getAllVisits : () -> (vec IpInfo) query;
    getLatestVisits : (nat) -> (vec IpInfo) query;
    getStats : () -> (record { totalVisits : nat; uniqueCountries : nat }) query;
    recordVisit : (IpInfo) -> (bool);
    whoami : () -> (text) query;

    // 新しいスケーラブル機能
    getVisitsPaged : (nat, nat) -> (PagedVisitsResult) query;
    getCountryStats : () -> (vec record { text; nat }) query;
    clearAllData : () -> (bool);
    getMemoryStats : () -> (MemoryStats) query;

    // HTTPS Outcalls機能
    fetchIpInfo : (text) -> (variant { ok : IpInfo; err : text });
    recordVisitByIp : (text) -> (variant { ok : bool; err : text });

    // マップタイル取得機能
    fetchMapTile : (nat, nat, nat) -> (variant { ok : blob; err : text })
}
